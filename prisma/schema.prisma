// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---Models---
model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            Role              @default(CUSTOMER)
  contactNo       String
  address         String
  profileImage    String?
  reviewAndRating ReviewAndRating[]
  orders          Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum Role {
  ADMIN
  CUSTOMER
}

model Category {
  id        String   @id @default(uuid())
  title     String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  reviewAndRating ReviewAndRating[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("books")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  bookId String @unique
  book   Book   @relation(fields: [bookId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviewsAndRatings")
}

model Order {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  orderedBooks Json[]
  status       String   @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("orders")
}
